Installing Proximodo on Mandrake 10.1
-------------------------------------

Written by Griptypethyne.
Version 1.0
27/3/05

Follow these steps in the order given to compile and run Proximodo. Once the steps have been completed re-building Proximodo (e.g, if you edit a source file) will be quick and easy.


************************** A. Check GCC Version ********************************************************

Proximodo will compile with gcc 3.4.1.
  
I received syntax errors when using gcc 3.3. The errors were in gcc file mathcalls.h. I do not know if the errors were caused by gcc 3.3 or some other problem.  Note that it was at a very early stage in my efforts to compile Proximodo.
 

********************  B. Install  GTK ******************************************************

Install the libgtk 1.2.10 development package using urpmi or rpmdrake. The file is:

libgtk+1.2-devel-1-1.2.10-40mdk

The development package of libgtk is required because in the next step wxWidgets will be installed and compiled from source. If someone creates a development package (binaries + headers) for wxWidgets 2.5.4 the I assume that a libgtk binary only package would be sufficient i.e. the headers would not be needed.


********************  C. Install wxWidgets ************************************************

Go to  http://www.wxwidgets.org/  -> Downloads -> All Ports Combined and download wxAll-2.5.4.tar.bz2

Note: Do not install wxGTK-2.5.4.tar.bz2. Proximodo will compile but will not link.

Open a terminal and su root. Then enter the following:

tar -zxvf wxAll-2.5.4.tar.bz2     //To unzip the files.
cd /wxWidgets-2.5.4               //Unzipped files are placed in this directory.
gtk-config --version              //Make sure result is 1.2.10.
wxInc=`gtk-config  --cflag`
wxLibs=`gtk-config  --libs`
export CFLAGS=$wxInc              //Tell wxWidgets the location of gtk files.
export LDFLAGS=$wxLibs            //configure fails if CFLAGS & LDFLAGS are not set.
./configure --with-gtk  --enable-gtk  --disable-gtk2
make clean                        //Necessary if a previous make has failed.
make
make install
ldconfig

Note:  If someone creates a development package (binaries + headers) for wxWidgets 2.5.4 then I assume that you could install that package rather than compiling wxWidgets from source. The wxWidgets headers are needed so that Proximodo can be compiled.


************************* E. Compile Proximodo ************************************************

Download the Proximodo source package and unzip to <Proximodo source path>.

Open a terminal and enter:

<wxWidgets path>/wxWidgets-2.5.4/wx-config --version    //Make sure result is 2.5.4
cd <Proximodo source path>

Open Makefile in a text editor and follow the instructions to set WXINC & WXLIB. 

Important: Make sure that you are using the correct version of wx-config - I have at least four copies on my system.

make       // Ignore the tag error message after Proximodo has linked.

The Proximodo executable can now be found in <Proximodo source path>/distrib

Note: I unzipped the Proximodo source to my /home directory. As a result the Proximodo binary installed in /home/<middle part of path>/src/distrib and so I did not need to su root. Maybe it would be better to edit Makefile so that the binary is placed in /usr/Proximodo, in which case it would be necessary to su root.



*************************  F.  Linux Path Conventions ********************************************

cd <Proximodo source path>/distrib

Open file settings.txt in a text editor and change the "\" to "/" in the list file names.


************************* G.  Run Proximodo ****************************************************

Create a shell script to run Proximodo:

#!/bin/sh
cd <path>/src/distrib 
export LD_LIBRARY_PATH=/usr/local/lib
export LD_LIBRARY_PATH=/usr/lib
export LD_LIBRARY_PATH=/usr/X11R6/lib
./proximodo&

You may wish to experiment to determine which of the export statements are required.


********************** H. Changes to Proximodo Source ****************************************

If you make changes to a Proximodo source file you can compile just the changed file (and save time) by entering

cd <Proximodo source path>
make distrib/proximodo

To compile all files enter

cd <Proximodo source path>
make clean
make 



